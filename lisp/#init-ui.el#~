
;;; init-ui.el --- UI configuration

;; 字体设置
(set-face-attribute 'default nil :height 140) ; 160 = 16pt (10倍关系)

;; 基础界面配置
(setq inhibit-startup-message t)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(tool-bar-mode -1)
(set-fringe-mode 10)

;; 设置相对行号
(setq display-line-numbers-type 'relative)
(global-display-line-numbers-mode 1)

;; 设置可视铃声
(setq visible-bell t)

;; 其他界面配置
(delete-selection-mode 1)
(global-hl-line-mode 1)
(show-paren-mode t)

(use-package highlight-indent-guides
  :ensure t
  :diminish highlight-indent-guides-mode
  :hook (prog-mode . my/enable-indent-guides-with-colors)
  :config
  (setq highlight-indent-guides-method 'character
        highlight-indent-guides-character ?\┊
        highlight-indent-guides-responsive 'top
        highlight-indent-guides-delay 0.1
        highlight-indent-guides-auto-enabled nil
        highlight-indent-guides-suppress-auto-error t)
  
 ;; 设置颜色
  (defun my/set-neon-blue-indent-guides ()
    "Set neon blue colors for indent guides - only innermost level."
    (let ((is-dark-theme (string-match-p "dark\\|black" 
                                        (symbol-name (or (car custom-enabled-themes) 'default)))))
      (if is-dark-theme
          (progn
            (set-face-foreground 'highlight-indent-guides-character-face "#3a3a3a")
            (set-face-foreground 'highlight-indent-guides-top-character-face "#00ffff")
            (set-face-foreground 'highlight-indent-guides-stack-character-face "#3a3a3a"))
        (progn
          (set-face-foreground 'highlight-indent-guides-character-face "#c0c0c0")
          (set-face-foreground 'highlight-indent-guides-top-character-face "#0080ff")
          (set-face-foreground 'highlight-indent-guides-stack-character-face "#c0c0c0")))))
  
  ;; 启用模式并设置颜色的函数
  (defun my/enable-indent-guides-with-colors ()
    "Enable indent guides mode and set custom colors."
    (highlight-indent-guides-mode 1)
    (my/set-neon-blue-indent-guides))
  
  ;; 修复的连续缩进线函数
  (defun my/ensure-continuous-guides ()
    "Ensure indent guides are continuous even with empty lines."
    (when (and (bound-and-true-p highlight-indent-guides-mode)
               (fboundp 'highlight-indent-guides--clear-cache))  ; 检查函数是否存在
      (save-excursion
        (beginning-of-line)
        (when (looking-at-p "^[[:space:]]*$")
          (highlight-indent-guides--clear-cache)
          (font-lock-flush (line-beginning-position) (line-end-position))))))
  
  ;; 主题切换时更新所有 buffer 的颜色
  (defun my/update-all-indent-guides-colors ()
    "Update indent guides colors in all buffers."
    (my/set-neon-blue-indent-guides)
    (dolist (buffer (buffer-list))
      (with-current-buffer buffer
        (when highlight-indent-guides-modE
          (when (fboundp 'highlight-indent-guIdes--clear-cache)
            (highlight-indent-guides--clear-cache))
          (when (derived-mode-p 'prog-mode)
            (font-lock-flush))))))
  
  (advice-add 'load-theme :after 
              (lambda (&rest _) (my/update-all-indent-guides-colors))))

(pixel-scroll-precision-mode t) 

(provide 'init-ui)
;;; init-ui.el ends here
h